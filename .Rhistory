remove(list = ls())
library(odbc)
library(DBI)
sort(unique(odbcListDrivers()[[1]]))
conn <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "LT-GCHAKRA",
Port = 1433,
Database = "R_Db",
Trusted_Connection = "True")
odbcListObjects(conn)
odbcListObjects(conn, catalog="R_Db", schema="dbo")
odbcListObjects(conn, catalog="R_Db", schema="dbo", type="table")
odbcListObjects(conn, catalog="R_Db", schema="dbo", type="view")
odbcListObjects(conn, catalog="R_Db", schema="dbo", name="vw_studentRpt")
odbcListObjectTypes(conn)
dbListFields(conn, "vw_studentRpt")
res <- dbSendQuery(conn,"SELECT student_name,subject_name,marks FROM vw_studentRpt")
dbFetch(res)
dbClearResult(res)
dbDisconnect(res)
dbDisconnect(con)
dbDisconnect(conn)
debugSource('C:/RLab/RStudentLab/RStudent.R')
dbFetch(res)
dbClearResult(res)
View(conn)
View(conn)
remove(list = ls())
library(odbc)
library(DBI)
sort(unique(odbcListDrivers()[[1]]))
conn <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "LT-GCHAKRA",
Port = 1433,
Database = "R_Db",
Trusted_Connection = "True")
odbcListObjects(conn)
View(conn)
odbcListObjects(conn, catalog="R_Db", schema="dbo")
odbcListObjects(conn, catalog="R_Db", schema="dbo", type="table")
odbcListObjects(conn, catalog="R_Db", schema="dbo", type="view")
odbcListObjects(conn, catalog="R_Db", schema="dbo", name="vw_studentRpt")
odbcListObjects(conn, catalog="R_Db", schema="dbo", view="vw_studentRpt")
odbcListObjectTypes(conn)
dbListFields(conn, "vw_studentRpt")
localDataFrame <- dbReadTable(conn)
?dbGetQuery
source('~/.active-rstudio-document')
res2 <- dbGetQuery(conn, "SELECT student_name,subject_name,marks FROM vw_studentRpt")
View(res2)
View(res2)
res <- dbSendQuery(conn,"SELECT student_name,subject_name,marks FROM vw_studentRpt")
str(res)
dbFetch(res)
res<- dbFetch(res)
View(res)
remove(list = ls())
library(DBI)
library(odbc)
sort(unique(odbcListDrivers()[[1]]))
conn <- dbConnect(odbc(),
Driver = "SQL Server",
Server = "LT-GCHAKRA",
Port = 1433,
Database = "R_Db",
Trusted_Connection = "True")
odbcListObjects(conn)
odbcListObjects(conn, catalog="R_Db", schema="dbo")
odbcListObjects(conn, catalog="R_Db", schema="dbo", type="table")
odbcListObjects(conn, catalog="R_Db", schema="dbo", type="view")
odbcListObjects(conn, catalog="R_Db", schema="dbo", name="vw_studentRpt")
odbcListObjects(conn, catalog="R_Db", schema="dbo", view="vw_studentRpt")
odbcListObjectTypes(conn)
dbListFields(conn, "vw_studentRpt")
#localDataFrame <- dbReadTable(conn)
res <- dbSendQuery(conn,"SELECT student_name,subject_name,marks FROM vw_studentRpt")
res3 <- dbFetch(res)
#dbClearResult(res)
#dbDisconnect(res)
str(res3)
res2 <- dbGetQuery(conn, "SELECT student_name,subject_name,marks FROM vw_studentRpt")
View(res2)
View(res3)
library(dplyr)
resultsByStudent <- res2 %>% group_by(student_name) %>% summarise(
mu = mean(marks),
sd = sd(marks),
median = median(marks),
mode = mode(marks)
)
View(resultsByStudent)
?mode
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
resultsByStudent <- res2 %>% group_by(student_name) %>% summarise(
mu = mean(marks),
sd = sd(marks),
median = median(marks),
mode = Mode(marks)
)
plot(resultsByStudent$mu)
plot(resultsByStudent$mu, ylab = "Marks")
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n")
axis(1, at=1:4, labels=resultsByStudent$student_name)
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student")
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student",
col = "red")
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student",
col = "red",
pch = 21)
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student",
col = "red",
pch = 21,
fill = T)
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student",
col = "red",
pch = 1)
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student",
col = "red",
pch = 2)
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student",
col = "red",
pch = 3)
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student",
col = "red",
pch = 4)
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student",
col = "red",
pch = 21)
points(resultsByStudent$median)
points(resultsByStudent$mode)
points(resultsByStudent$mode, col = "green")
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Average Marks by Student",
col = "red",
pch = 21)
points(resultsByStudent$mode, col = "green")
points(resultsByStudent$median, col = "purple")
axis(1, at=1:4, labels=resultsByStudent$student_name)
lines(resultsByStudent$mode, col = "green")
lines(resultsByStudent$median, col = "purple")
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21)
lines(x = 1:4, y = resultsByStudent$mu)
lines(x = 1:4, y = resultsByStudent$mu, col = "red")
lines(resultsByStudent$mode, col = "green")
lines(resultsByStudent$median, col = "purple")
legend("topleft", c("mean", "median", "mode"), col = c("red", "purple", "green"))
legend("topleft",
c("mean", "median", "mode"),
col = c("red", "purple", "green"),
pch = 21
)
axis(1, at=1:4, labels=resultsByStudent$student_name)
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
install.packages("calibrate")
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
warnings()
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
print(res,quote = FALSE, row.names = FALSE)
print(res,quote = FALSE, row.names = FALSE)
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21)
axis(1, at=1:4, labels=resultsByStudent$student_name)
lines(x = 1:4, y = resultsByStudent$mu, col = "red")
lines(resultsByStudent$mode, col = "green")
lines(resultsByStudent$median, col = "purple")
legend("topleft",
c("mean", "median", "mode"),
col = c("red", "purple", "green"),
pch = 21
)
plot(resultsByStudent$mu,
ylab = "Marks",
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21)
axis(1, at=1:4, labels=resultsByStudent$student_name)
plot(resultsByStudent$mu,
ylab = "Marks",
ylim = c(0:100),
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21)
plot(resultsByStudent$mu,
ylab = "Marks",
ylim = c(0,100),
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21)
axis(1, at=1:4, labels=resultsByStudent$student_name)
lines(x = 1:4, y = resultsByStudent$mu, col = "red")
lines(resultsByStudent$mode, col = "green")
legend("topleft",
c("mean", "mode"),
col = c("red","green"),
pch = 21
)
plot(resultsByStudent$mu,
ylim = c(0,100),
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21,
xlab = "Student")
plot(resultsByStudent$mu,
ylim = c(0,100),
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21,
xlab = "Student",
ylab = "Score")
axis(1, at=1:4, labels=resultsByStudent$student_name)
lines(x = 1:4, y = resultsByStudent$mu, col = "red")
lines(resultsByStudent$mode, col = "green")
legend("topleft",
c("mean", "mode"),
col = c("red","green"),
pch = 21
)
View(resultsByStudent)
graphics.off()
plot(resultsByStudent$mu,
ylim = c(0,100),
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21,
xlab = "Student",
ylab = "Score")
axis(1, at=1:4, labels=resultsByStudent$student_name)
lines(x = 1:4, y = resultsByStudent$mu, col = "red")
lines(resultsByStudent$mode, col = "green")
legend("topleft",
c("mean", "mode"),
col = c("red","green"),
pch = 21
)
?lines
?points
plot(resultsByStudent$mu,
ylim = c(0,100),
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21,
xlab = "Student",
ylab = "Score")
axis(1, at=1:4, labels=resultsByStudent$student_name)
lines(x = 1:4, y = resultsByStudent$mu, col = "red")
points(x = 1:4, y = resultsByStudent$mode, col = "green")
lines(x = 1:4, y = resultsByStudent$mode, col = "green")
getwd()
write.csv(resultsByStudent,
row.names = F,
file = "resultsBYStudent.csv")
write.csv(res,
row.names = F,
file = "rawStudentData.csv")
pdf(file = "resultsByStudent.pdf",   # The directory you want to save the file in
width = 4, # The width of the plot in inches
height = 4) # The height of the plot in inches
plot(resultsByStudent$mu,
ylim = c(0,100),
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21,
xlab = "Student",
ylab = "Score")
axis(1, at=1:4, labels=resultsByStudent$student_name)
lines(x = 1:4, y = resultsByStudent$mu, col = "red")
points(x = 1:4, y = resultsByStudent$mode, col = "green")
lines(x = 1:4, y = resultsByStudent$mode, col = "green")
legend("topleft",
c("mean", "mode"),
col = c("red","green"),
pch = 21
)
dev.off()
pdf(file = "resultsByStudent.pdf",   # The directory you want to save the file in
width = 8.5, # The width of the plot in inches
height = 11) # The height of the plot in inches
plot(resultsByStudent$mu,
ylim = c(0,100),
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21,
xlab = "Student",
ylab = "Score")
axis(1, at=1:4, labels=resultsByStudent$student_name)
lines(x = 1:4, y = resultsByStudent$mu, col = "red")
points(x = 1:4, y = resultsByStudent$mode, col = "green")
lines(x = 1:4, y = resultsByStudent$mode, col = "green")
legend("topleft",
c("mean", "mode"),
col = c("red","green"),
pch = 21
)
dev.off()
pdf(file = "resultsByStudent.pdf",   # The directory you want to save the file in
width = 10, # The width of the plot in inches
height = 8) # The height of the plot in inches
plot(resultsByStudent$mu,
ylim = c(0,100),
xaxt = "n",
main = "Results by Student",
col = "red",
pch = 21,
xlab = "Student",
ylab = "Score")
axis(1, at=1:4, labels=resultsByStudent$student_name)
lines(x = 1:4, y = resultsByStudent$mu, col = "red")
points(x = 1:4, y = resultsByStudent$mode, col = "green")
lines(x = 1:4, y = resultsByStudent$mode, col = "green")
legend("topleft",
c("mean", "mode"),
col = c("red","green"),
pch = 21
)
dev.off()
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
source('C:/RLab/RStudentLab/RStudent.R')
install.packages("learnr")
source('C:/RLab/LineCount/lineCalc.R')
source('C:/RLab/LineCount/lineCalcNew.R')
source('C:/RLab/LineCount/lineCalcNew.R')
source('C:/RLab/LineCount/lineCalcNew.R')
source('C:/RLab/LineCount/lineCalcNew.R')
source('C:/RLab/LineCount/lineCalcNew.R')
install.packages("learnr")
